---
import Layout from '~/layouts/PageLayout.astro';


const metadata = {
  title: 'Convert Markdown to HTML free online',
  description: "This tool converts Markdown text into a html format. Paste the Markdown in the Input Box and it will be rendered as a rich text in the output text. Copy the output and you'll have a HTML output."
};
---
<Layout metadata={metadata}>
    
<div style="padding-top:10px; padding-left:50px;">
<h1 style=" color: #2772ed; font-size:32px ;font-weight: bold; padding-top:10px;">Convert Markdown to HTML Online - Free</h1>
<p style="padding-top:10px;">You can use this tool to convert Markdown to HTML online for free. </p>
</div>

<script is:inline src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

<div id="button-container" class="tool-button-container" style="display: flex; justify-content: flex-end;">
   <button id="copy-button" class="tool-styled-button"><i class="far fa-copy"></i> Copy Output</button>
</div>
<main class="twocols">
    <textarea id="input" class="input-field"  autocomplete="off"></textarea><p class="text-left-instructions" id="input-instructions">Paste your Markdown here..</p>
    <textarea id="output" class="input-field"  autocomplete="off"></textarea><p class="text-instructions" id="output-instructions">..get your HTML here</p>
</main>
<div id="hide-grow-widget"></div>


{<script>
    // Select the input and output elements
    var inputElement = document.getElementById('input');
    var outputElement = document.getElementById('output');
    
    // Function to convert HTML to Markdown
    function toHTML() {
        

        // Get the text content from the content-editable div
        var textContent = inputElement.value;

        var outputHTML = marked.parse(textContent);
        outputElement.value = outputHTML;

    }

    // Add event listener to invoke toMarkdown function on input
    inputElement.addEventListener('input', ()=>{
      var inputInstructions = document.getElementById('input-instructions');
      var outputInstructions = document.getElementById('output-instructions');

      var hasContent = !!inputElement.value.trim();

      if (hasContent) {
        inputInstructions.style.display = 'none'; // Hide instructions if there's content
        outputInstructions.style.display = 'none';
      } else {
          inputInstructions.style.display = 'block';
          outputInstructions.style.display = 'block';
          inputElement.focus();
      }
      toHTML();
    });

    
    var copyButtonForHTMLCopy = document.getElementById('copy-button');
    if (navigator.clipboard && navigator.clipboard.writeText) {
     copyButtonForHTMLCopy.addEventListener('click', () => {
      event.preventDefault();
      var html = outputElement.value;
      var blob = new Blob([html], {type: 'text/html'});
      var clipboardItem = new window.ClipboardItem({ 'text/html': blob });
      navigator.clipboard.write([clipboardItem]);
      showCopyTooltip();
   });
 }

    var menuItemsToHide = ["menu-item-2062", "menu-item-1477", "menu-item-1479"];

    // Iterate over each menu item ID and hide them
    menuItemsToHide.forEach(function (itemId) {
        var menuItem = document.getElementById(itemId);
        if (menuItem) {
            menuItem.style.display = "none";
        }
    });
    function showCopyTooltip() {
        var tooltip = document.createElement('div');
        tooltip.className = 'copy-tooltip';
        tooltip.textContent = 'Text copied to clipboard';
        document.body.appendChild(tooltip);

        setTimeout(() => {
            tooltip.style.opacity = '0';
            setTimeout(() => {
                document.body.removeChild(tooltip);
            }, 500);
        }, 1500);
    }

</script>}
 

</Layout>