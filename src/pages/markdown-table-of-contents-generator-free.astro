---
import Layout from '~/layouts/PageLayout.astro';


const metadata = {
  title: 'Markdown Table of Contents Generator(100% client site) - Free',
  description: "This tool generates a table of contents for your Markdown text for free."
};
---
<Layout metadata={metadata}>

<div style="padding-top:10px; padding-left:50px;">
<h1 style=" color: #2772ed; font-size:32px ;font-weight: bold; padding-top:10px;">Markdown Table of Contents Generator - Free</h1>
<p style="padding-top:10px;">You can use this tool to Generate Table of Contents for Markdown for free.</p>
</div>
<div style="text-align: center;">
    <a href="https://workspace.google.com/marketplace/app/docs_to_markdown_pro/483386994804?pann=b" target="_blank" aria-label="Get it from the Google Workspace Marketplace" rel="noopener">
      <div style="display: inline-block;">
        <img alt="Google Workspace Marketplace badge" alt-text="Get it from the Google Workspace Marketplace" src="https://workspace.google.com/static/img/marketplace/en/gwmBadge.svg?" style="height: 68px;">
      </div>
    </a>
  </div>
  

{<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

<div id="button-container" class="tool-button-container" style="display: flex; justify-content: flex-end;">
   <button id="copy-button" class="tool-styled-button"><i class="far fa-copy"></i> Copy TOC</button>
</div>
<main class="twocols">
    <textarea id="input" class="input-field"  autocomplete="off"></textarea><p class="text-left-instructions" id="input-instructions">Paste your Markdown here..</p>
    <textarea id="output" class="input-field"  autocomplete="off"></textarea><p class="text-right-instructions" id="output-instructions">..Get your table of contents here</p>
</main>
<div id="hide-grow-widget"></div>


{<script>
    // Select the input and output elements
    const inputElement = document.getElementById('input');
    const outputElement = document.getElementById('output');
    
    // Function to convert HTML to Markdown
    function generateTOC() {
        // Get the text content from the content-editable div
        var textContent = inputElement.value;

       const tokens = marked.lexer(textContent);
       let toc = "## Table of Contents\n\n";
       tokens.forEach(token => {
          if (token.type === 'heading') {
            const level = token.depth;
            const text = token.text;
            const slug = text.toLowerCase().replace(/\s+/g, '-');
            toc += `${'  '.repeat(level - 1)}- [${text}](#${slug})\n`;
          }
        });
        outputElement.value = toc;
        

    }

    // Add event listener to invoke toMarkdown function on input
    inputElement.addEventListener('input', ()=>{
      const inputInstructions = document.getElementById('input-instructions');
      const outputInstructions = document.getElementById('output-instructions');

      const hasContent = !!inputElement.value.trim();
      if (hasContent) {
        inputInstructions.style.display = 'none'; // Hide instructions if there's content
        outputInstructions.style.display = 'none';
      } else {
          inputInstructions.style.display = 'block';
          outputInstructions.style.display = 'block';
          inputElement.focus();
      }
      generateTOC();
    });

    
    const copyButton = document.getElementById('copy-button');
    if (navigator.clipboard && navigator.clipboard.writeText) {
     copyButton.addEventListener('click', () => {
      event.preventDefault();
      var html = outputElement.value;
      const blob = new Blob([html], {type: 'text/plain'});
      const clipboardItem = new window.ClipboardItem({ 'text/plain': blob });
      navigator.clipboard.write([clipboardItem]);
      showCopyTooltip();
   });
 }

    var menuItemsToHide = ["menu-item-2062", "menu-item-1477", "menu-item-1479", "menu-item-1890"];

    // Iterate over each menu item ID and hide them
    menuItemsToHide.forEach(function (itemId) {
        var menuItem = document.getElementById(itemId);
        if (menuItem) {
            menuItem.style.display = "none";
        }
    });

    function showCopyTooltip() {
        var tooltip = document.createElement('div');
        tooltip.className = 'copy-tooltip';
        tooltip.textContent = 'Text copied to clipboard';
        document.body.appendChild(tooltip);

        setTimeout(() => {
            tooltip.style.opacity = '0';
            setTimeout(() => {
                document.body.removeChild(tooltip);
            }, 500);
        }, 1500);
    }

</script>}

</Layout>